# NOTE: update this with your service name
service: serverless-nodejs-starter

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  profile: serverless-admin
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}

functions:
  hello:
    handler: controllers/handler.hello
    events:
      - http:
          path: hello
          method: get
  usersList:
    handler: controllers/UserController.getUsers
    events:
      - http:
          path: users
          method: get
  usersGet:
    handler: controllers/UserController.getUser
    events:
      - http:
          path: users/{id}
          method: get
  usersCreate:
    handler: controllers/UserController.createUser
    events:
      - http:
          path: users
          method: post
  usersUpdate:
    handler: controllers/UserController.updateUser
    events:
      - http:
          path: users/{id}
          method: put
  usersDelete:
    handler: controllers/UserController.deleteUser
    events:
      - http:
          path: users/{id}
          method: delete
  papersList:
    handler: controllers/PaperController.getPapers
    events:
      - http:
          path: papers
          method: get
  papersGet:
    handler: controllers/PaperController.getPaper
    events:
      - http:
          path: papers/{id}
          method: get
  papersCreate:
    handler: controllers/PaperController.createPaper
    events:
      - http:
          path: papers
          method: post
  papersUpdate:
    handler: controllers/PaperController.updatePaper
    events:
      - http:
          path: papers/{id}
          method: put
  papersDelete:
    handler: controllers/PaperController.deletePaper
    events:
      - http:
          path: papers/{id}
          method: delete
  groupsList:
    handler: controllers/GroupController.getGroups
    events:
      - http:
          path: groups
          method: get
  groupsGet:
    handler: controllers/GroupController.getGroup
    events:
      - http:
          path: groups/{id}
          method: get
  groupsCreate:
    handler: controllers/GroupController.createGroup
    events:
      - http:
          path: groups
          method: post
  groupsUpdate:
    handler: controllers/GroupController.updateGroup
    events:
      - http:
          path: groups/{id}
          method: put
  groupsDelete:
    handler: controllers/GroupController.deleteGroup
    events:
      - http:
          path: groups/{id}
          method: delete
